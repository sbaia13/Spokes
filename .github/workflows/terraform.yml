name: 'terraform'
on:
  push:
    branches: [ "prod" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    env:
          ARM_CLIENT_ID: ${{secrets.CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.TENANT_ID}}
    runs-on: ubuntu-latest
    environment: production

    # Use the powershell to apply the commands
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        secret-id: ${{ secrets.secret_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

      # Apply the deployement
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
